)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2,
title = "Data"
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 4, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 4, height = 3, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1
),
# Increasing axis font size
scales= list(
x=list(
cex = 1
),
y=list(
cex = 1
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) ,border = "transparent")
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.3
),
y=list(
cex = 1.2
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.5
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.0
),
y=list(
cex = 1.0
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.0
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.0
),
y=list(
cex = 1.0
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "tan2")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.0
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.0
),
y=list(
cex = 1.0
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors),axis.line = list(col = 0) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
colors = c("deeppink1", "royalblue2", "darkolivegreen", "azure3")
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "azure3")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.0
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.0
),
y=list(
cex = 1.0
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors),axis.line = list(col = 0) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "azure4")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.0
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.0
),
y=list(
cex = 1.0
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors),axis.line = list(col = 0) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
library("lattice")
colors = c("deeppink1", "royalblue2", "darkolivegreen", "azure4")
jpeg("deterministic.prediction.results.jpeg", width = 6, height = 4, units = 'in', res = 300)
barchart(
data = data.deterministic,
data.deterministic$Score ~ data.deterministic$Evaluation.parameters,
groups = data.deterministic$Features,
ylab = list(
label = "Score",
cex = 1.0
),
# Increasing axis font size
scales= list(
x=list(
cex = 1.0
),
y=list(
cex = 1.0
)
),
#Adding legends
auto.key = list(
space = list(space = "top"),
columns = 2
),
border = "transparent",
#Adding color to boxes
par.settings = list(superpose.polygon = list(col = colors),axis.line = list(col = 0) )
)
#https://www.youtube.com/watch?v=O9Ebu7J2kC4
#https://www.youtube.com/watch?v=sf_li1XV664
dev.off()
q()
View(data.deterministic)
rm(list=ls())
q()
install.packages(twitteR)
install.packages("twitteR")
setwd("C:/Users/Saurav Saha/Desktop/fifa")
library(twitteR)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library("uCAREChemSuiteCLI", lib.loc="~/R/win-library/3.4")
remove.packages("uCAREChemSuiteCLI", lib="~/R/win-library/3.4")
githubinstall("uCAREChemSuiteCLI")
library("git2r", lib.loc="~/R/win-library/3.4")
githubinstall("uCAREChemSuiteCLI")
install_github("sauravbsaha/uCAREChemSuiteCLI")
library("BiocInstaller", lib.loc="~/R/win-library/3.4")
install_github("sauravbsaha/uCAREChemSuiteCLI")
library("devtools", lib.loc="~/R/win-library/3.4")
install_github("sauravbsaha/uCAREChemSuiteCLI")
install.packages(githubinstall)
install.packages("githubinstall")
library(githubinstall)
githubinstall("uCAREChemSuiteCLI")
install.packages("uCAREChemSuiteCLI")
install.packages("uCAREChemSuiteCLI")
install.packages("uCAREChemSuiteCLI")
library("uCAREChemSuiteCLI")
setwd("C:/Users/Saurav Saha/Dropbox/office/saurav_saha_shiats/PhD/Chemoinformatics_uCARE_Ecoli/analysis/drug_class_based_Classification/r_scripts/R-Package/uCAREChemSuiteCLI")
